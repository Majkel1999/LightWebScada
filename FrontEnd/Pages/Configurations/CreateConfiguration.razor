@page "/configurations/create/{organizationId:int}"

@using DataRegisters

@inject OrganizationContext organizationContext
@inject ConfigHandler configHandler
@inject NavigationManager NavManager
@inject IStringLocalizer<SharedResources> localizer

@attribute [Authorize]

<div class="container" style="max-width:500px">
    <div class="border" style="padding: 20px; margin: 10px">
        @if (!String.IsNullOrEmpty(m_registerError))
        {
            <br />
            <div class="alert alert-danger" role="alert">
                @m_registerError
            </div>
            <br />
        }
        <EditForm Model="m_valueModel" OnSubmit="AddToConfig">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="organization name"><b>@localizer["RegisterType"]</b></label>
                <InputSelect id="type" @bind-Value="m_valueModel.Type" class="form-control" required>
                    @foreach (var value in Enum.GetValues(typeof(DataRegisters.RegisterType)))
                    {
                        <option>@value</option>
                    }
                </InputSelect>
            </div>
            <div class="form-group">
                <label for="organization name"><b>@localizer["PhysicalRegister"]0-9999</b></label>
                <InputNumber id="registerNumber" @bind-Value="m_valueModel.RegisterNumber" class="form-control" required
                    placeholder=@localizer["RegisterNum"] />
            </div>
            <div class="text-center">
                <button class="btn btn-primary" type="submit">@localizer["AddRegister"]</button>
            </div>
        </EditForm>
    </div>
</div>


<div class="container overflow-auto border" style="max-height:800px; padding:20px">
    <h4 class="text-center">@localizer["Configuration"]</h4>
    @if (!String.IsNullOrEmpty(m_configError))
    {
        <br />
        <div class="alert alert-danger" role="alert">
            @m_configError
        </div>
        <br />
    }
    <EditForm Model="m_config" OnSubmit="SaveConfig">
        <div class="form-group">
            <label for="organization name"><b>@localizer["Name"]</b></label>
            <InputText id="configName" @bind-Value="m_config.Name" class="form-control" required
                placeholder=@localizer["ConfigName"] />
        </div>
        <div class="form-group">
            <label for="organization name"><b>@localizer["Protocol"]</b></label>
            <InputSelect id="configProtocol" @bind-Value="m_config.Protocol" class="form-control" required>
                @foreach (var value in Enum.GetValues(typeof(DataRegisters.Protocol)))
                {
                    <option>@value</option>
                }
            </InputSelect>
        </div>
        <div class="text-center">
            <button class="btn btn-success" type="submit">@localizer["SaveConfig"]</button>
        </div>
    </EditForm>
    <br />
    <h6 class="text-center">@localizer["CoilRegisters"]</h6>
    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th style="width: 70%;" scope="col">@localizer["PhysicalRegister"]</th>
                <th scope="col" style="color: red;width: 30%;">@localizer["Delete"]</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var line in m_config.Registers.CoilRegisters.OrderBy(x => x.RegisterNumber))
            {
                <tr>
                    <td>@localizer["PhysicalRegister"]: @line.RegisterNumber</td>
                    <td>
                        <button class="btn btn-link text-danger"
                        @onclick="() => RemoveFromConfig(line,RegisterType.CoilRegister)">
                            🗙
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <h6 class="text-center">@localizer["DiscreteInputs"]</h6>
    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th style="width: 70%;" scope="col">@localizer["PhysicalRegister"]</th>
                <th scope="col" style="color: red;width: 30%;">@localizer["Delete"]</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var line in m_config.Registers.DiscreteInputs.OrderBy(x => x.RegisterNumber))
            {
                <tr>
                    <td>@localizer["PhysicalRegister"]: @line.RegisterNumber</td>
                    <td>
                        <button class="btn btn-link text-danger"
                        @onclick="() => RemoveFromConfig(line,RegisterType.DiscreteInput)">
                            🗙
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <h6 class="text-center">@localizer["InputRegisters"]</h6>
    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th style="width: 70%;" scope="col">@localizer["PhysicalRegister"]</th>
                <th scope="col" style="color: red;width: 30%;">@localizer["Delete"]</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var line in m_config.Registers.InputRegisters.OrderBy(x => x.RegisterNumber))
            {
                <tr>
                    <td>@localizer["PhysicalRegister"]: @line.RegisterNumber</td>
                    <td>
                        <button class="btn btn-link text-danger"
                        @onclick="() => RemoveFromConfig(line,RegisterType.InputRegister)">
                            🗙
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <h6 class="text-center">@localizer["HoldingRegisters"]</h6>
    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th style="width: 70%;" scope="col">@localizer["PhysicalRegister"]</th>
                <th scope="col" style="color: red;width: 30%;">@localizer["Delete"]</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var line in m_config.Registers.HoldingRegisters.OrderBy(x => x.RegisterNumber))
            {
                <tr>
                    <td>@localizer["PhysicalRegister"]: @line.RegisterNumber</td>
                    <td>
                        <button class="btn btn-link text-danger"
                        @onclick="() => RemoveFromConfig(line,RegisterType.HoldingRegister)">
                            🗙
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    [Parameter]
    public int OrganizationId { get; set; }

    public ConfigValueModel m_valueModel = new ConfigValueModel();
    private ClientConfig m_config = new ClientConfig();
    private string m_configError = "";
    private string m_registerError = "";

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }

    private void AddToConfig()
    {
        configHandler.TryAddRegister(ref m_config, m_valueModel.Type, m_valueModel.RegisterNumber, out m_registerError);
    }

    private void RemoveFromConfig(Register register, RegisterType type)
    {
        configHandler.TryRemoveRegister(ref m_config, type, register.RegisterNumber);
    }

    private void SaveConfig()
    {
        string json = configHandler.ConfigToJson(m_config);
        var entry = organizationContext.Configurations.Add(new ClientConfigEntity
        {
            OrganizationId = OrganizationId,
            ConfigName = m_config.Name,
            ConfigJson = json
        });
        organizationContext.SaveChanges();
        NavManager.NavigateTo("/organizations/" + OrganizationId, true);
    }
}
